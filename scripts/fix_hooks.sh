#!/bin/bash

echo "--- Verificando configurações de Git hooks (Modificado) ---"

# Function to check if a git config is truly set (not empty and not /dev/null)
is_git_config_set() {
    local value="$1"
    if [ -n "$value" ] && [ "$value" != "/dev/null" ]; then
        return 0 # True, it is set
    else
        return 1 # False, it is not set (or is /dev/null)
    fi
}

echo ""
echo "Configuração local de core.hooksPath (git config core.hooksPath):"
LOCAL_HOOKS_PATH=$(git config core.hooksPath)

if is_git_config_set "$LOCAL_HOOKS_PATH"; then
    echo "  Definido como: $LOCAL_HOOKS_PATH"
    if [ "$LOCAL_HOOKS_PATH" != ".git/hooks" ]; then
        echo "  AVISO: core.hooksPath local está definido para um caminho não padrão ('$LOCAL_HOOKS_PATH')."
        echo "  Isso PODE conflitar com 'uv run pre-commit install'."
        echo "  'uv run pre-commit install' tentará definir core.hooksPath para '.git/hooks' ou pode falhar se já estiver definido incorretamente."

        echo "  Tentando remover a configuração local de core.hooksPath (git config --unset-all core.hooksPath)..."
        git config --unset-all core.hooksPath
        if [ $? -eq 0 ]; then
            echo "  core.hooksPath local removido com sucesso."
            LOCAL_HOOKS_PATH=$(git config core.hooksPath) # Re-fetch
        else
            echo "  FALHA ao remover core.hooksPath local. Por favor, verifique manualmente."
        fi
    else
        echo "  Está configurado para '.git/hooks'. Isso é o esperado se pre-commit já foi instalado e está funcionando."
    fi
else
    echo "  Não está definido localmente (ou é /dev/null). 'uv run pre-commit install' poderá configurá-lo."
fi

echo ""
echo "Verificando configuração global de core.hooksPath (git config --global core.hooksPath)..."
GLOBAL_HOOKS_PATH=$(git config --global core.hooksPath 2>/dev/null)
if is_git_config_set "$GLOBAL_HOOKS_PATH"; then
    echo "  Definido globalmente como: $GLOBAL_HOOKS_PATH"
    echo "  AVISO: Uma configuração global de core.hooksPath pode interferir."
else
    echo "  Não está definido globalmente (ou é /dev/null). Isso geralmente é bom."
fi

echo ""
echo "--- Tentando instalar/reinstalar pre-commit hooks usando 'uv run' ---"
if command -v uv &> /dev/null; then
    echo "Executando 'uv run pre-commit install'..."
    uv run pre-commit install
    INSTALL_STATUS=$?
    if [ $INSTALL_STATUS -eq 0 ]; then
        echo "  'uv run pre-commit install' executado com sucesso."
        NEW_LOCAL_HOOKS_PATH=$(git config core.hooksPath)
        echo "  Valor atual de core.hooksPath local: '$NEW_LOCAL_HOOKS_PATH'"

        # Check if hooks were actually installed
        if [ -f ".git/hooks/pre-commit" ] && grep -q "Generated by pre-commit" ".git/hooks/pre-commit"; then
            echo "  Script .git/hooks/pre-commit encontrado e parece ser gerenciado pelo pre-commit."
            if [ "$NEW_LOCAL_HOOKS_PATH" == ".git/hooks" ] || (! is_git_config_set "$NEW_LOCAL_HOOKS_PATH"); then
                 echo "  Configuração de core.hooksPath está consistente com a instalação do pre-commit."
                 echo "  RESOLVIDO: Pre-commit hooks parecem estar instalados corretamente."
            else
                 echo "  AVISO: core.hooksPath é '$NEW_LOCAL_HOOKS_PATH', mas esperava-se '.git/hooks' ou não definido."
                 echo "  Pode ainda haver um problema de configuração, mas os hooks podem funcionar."
            fi
        else
            echo "  ERRO: .git/hooks/pre-commit não encontrado ou não gerenciado pelo pre-commit."
            echo "  FALHA NA RESOLUÇÃO: Pre-commit hooks não parecem estar instalados corretamente."
        fi
    else
        echo "  FALHA ao executar 'uv run pre-commit install' (código de saída: $INSTALL_STATUS). Verifique as mensagens de erro."
        echo "  A mensagem de erro comum é '[ERROR] Cowardly refusing to install hooks with core.hooksPath set.'"
        echo "  Se isso ocorrer, o problema de detecção de core.hooksPath pelo pre-commit persiste."
        echo "  FALHA NA RESOLUÇÃO: Pre-commit hooks não puderam ser instalados."
    fi
else
    echo "ERRO: Comando 'uv' não encontrado. O ambiente não está configurado como esperado."
    echo "  FALHA NA RESOLUÇÃO: Ambiente não suporta 'uv run'."
fi

echo ""
echo "--- Verificação de hooks concluída (Modificado) ---"
