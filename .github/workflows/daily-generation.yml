name: Daily Chapter Generation
on:
  schedule:
    - cron: '0 6 * * *' # 06:00 UTC daily
    # - cron: '0 18 * * *' # 18:00 UTC daily # Temporarily disabled second run
  workflow_dispatch: # Allows manual triggering

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to commit and push changes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history for all branches and tags

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Matches .python-version file

      - name: Install dependencies
        run: |
          pip install uv
          uv sync --frozen # Install from uv.lock, requires uv.lock to be up-to-date

      - name: Ensure scripts are executable
        run: chmod +x scripts/get_next_chapter_params.py

      - name: Determine next chapter position and predecessor
        id: chapter_params
        run: |
          python scripts/get_next_chapter_params.py
          echo "next_pos=$(cat .next_pos)" >> $GITHUB_OUTPUT
          echo "prev_uuid=$(cat .prev_uuid)" >> $GITHUB_OUTPUT

      - name: Generate new chapter variations via CLI
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "Synthesizing for position ${{ steps.chapter_params.outputs.next_pos }} from predecessor ${{ steps.chapter_params.outputs.prev_uuid }}"
          uv run hronir synthesize --position "${{ steps.chapter_params.outputs.next_pos }}" --prev "${{ steps.chapter_params.outputs.prev_uuid }}"

      - name: Configure Git
        run: |
          git config user.name "Hrönir Automation"
          git config user.email "actions@hronir.dev" # Using a noreply-style email

      - name: Commit and Push Changes
        run: |
          git pull # Ensure local branch is up-to-date
          # Add files generated by the synthesize command
          git add the_library/ ratings/ forking_path/

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No new chapters or rating changes to commit."
          else
            # Commit message includes the position for clarity
            git commit -m "feat: Auto-generate hrönirs for position ${{ steps.chapter_params.outputs.next_pos }}"
            git push
          fi
