{
  "permissions": {
    "allow": [
      "Bash(uv:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(python3:*)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(grep:*)",
      "Bash(rm:*)",
      "Bash(gh pr:*)",
      "Bash(git push:*)",
      "Bash(diff:*)",
      "Bash(chmod:*)",
      "Bash(for branch in \"codex/add-pydantic,-networkx-and-orm-models\" )",
      "Bash(\"codex/add-ruff-and-black-hooks-to-pre-commit-config\" )",
      "Bash(\"codex/add-uuid-based-chapter-storage-and-cli-commands\" )",
      "Bash(\"codex/assimilar-mudanças-sem-erros-de-merge\" )",
      "Bash(\"codex/criar-workflow-diário-com-placeholder\" )",
      "Bash(\"codex/propor-estrutura-de-pastas-para-capítulos\" )",
      "Bash(\"codex/refatorar-código-e-documentação-com-estilo-borges\" )",
      "Bash(\"codex/set-up-project-with-pyproject.toml-and-ci\" )",
      "Bash(\"codex/substituir-sqlite3-por-sqlalchemy\" )",
      "Bash(\"feat/initial-repo-structure\" )",
      "Bash(\"initial-setup-and-seed-chapter\" )",
      "Bash(\"repomix-integration\")",
      "Bash(do)",
      "Bash(echo \"git push origin --delete \"\"$branch\"\"\")",
      "Bash(done)",
      "Bash(mkdir:*)",
      "Bash(rg:*)",
      "Bash(mv:*)",
      "Bash(git config:*)",
      "Bash(for file in test_temp/*.md)",
      "Bash(do echo \"Storing $file...\")",
      "Bash(sed:*)"
    ],
    "deny": []
  }
}
